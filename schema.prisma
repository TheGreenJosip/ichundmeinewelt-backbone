// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String       @id @default(cuid())
  name      String       @default("")
  email     String       @unique @default("")
  password  String
  role      UserRoleType @default(user)
  posts     Post[]       @relation("Post_author")
  createdAt DateTime?    @default(now())
  updatedAt DateTime?    @updatedAt
}

model Post {
  id                   String    @id @default(cuid())
  title                String    @default("")
  slug                 String    @unique @default("")
  excerpt              String    @default("")
  author               User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId             String?   @map("author")
  category             Category? @relation("Post_category", fields: [categoryId], references: [id])
  categoryId           String?   @map("category")
  coverImage_id        String?
  coverImage_filesize  Int?
  coverImage_width     Int?
  coverImage_height    Int?
  coverImage_extension String?
  coverImageAlt        String    @default("")
  content              Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  status               String?   @default("draft")
  publishedAt          DateTime?
  featured             Boolean   @default(false)
  isPinned             Boolean   @default(false)
  tags                 Tag[]     @relation("Post_tags")
  seoTitle             String    @default("")
  seoDescription       String    @default("")
  canonicalUrl         String    @default("")
  ogImage_id           String?
  ogImage_filesize     Int?
  ogImage_width        Int?
  ogImage_height       Int?
  ogImage_extension    String?
  viewCount            Int?      @default(0)
  likeCount            Int?      @default(0)
  createdAt            DateTime? @default(now())
  updatedAt            DateTime? @updatedAt

  @@index([authorId])
  @@index([categoryId])
}

model Tag {
  id                   String          @id @default(cuid())
  name                 String          @unique @default("")
  posts                Post[]          @relation("Post_tags")
  knowledgeBaseEntries KnowledgeBase[] @relation("KnowledgeBase_tags")
  createdAt            DateTime?       @default(now())
  updatedAt            DateTime?       @updatedAt
}

model ContactSubmission {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @default("")
  message   String    @default("")
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Subscriber {
  id           String    @id @default(cuid())
  email        String    @unique @default("")
  name         String    @default("")
  source       String    @default("")
  status       String?   @default("active")
  consentGiven Boolean   @default(true)
  subscribedAt DateTime? @default(now())
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
}

model KnowledgeBase {
  id         String    @id @default(cuid())
  title      String    @default("")
  slug       String    @unique @default("")
  content    Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  plainText  String    @default("")
  sourceType String?   @default("original")
  sourceUrl  String    @default("")
  tags       Tag[]     @relation("KnowledgeBase_tags")
  status     String?   @default("draft")
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
}

model Category {
  id        String    @id @default(cuid())
  name      String    @unique @default("")
  posts     Post[]    @relation("Post_category")
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

enum UserRoleType {
  admin
  user
}
